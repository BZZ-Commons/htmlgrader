name: HTMLHint Lint
on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
jobs:
  run-lint:
    runs-on: ubuntu-latest
    outputs:
      result: ${{ steps.lint.outputs.lint_result }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '16'

      - name: Install HTMLHint
        run: npm install -g htmlhint

      - name: Run HTMLHint and save JSON report
        id: lint
        run: |
          htmlhint -f json "**/*.html" > lint-report.json || true
          # Determine if there were any errors
          if jq 'map(select(.messages|length>0)) | length > 0' lint-report.json; then
            echo "lint_result=failure" >> $GITHUB_OUTPUT
          else
            echo "lint_result=success" >> $GITHUB_OUTPUT
          fi
        continue-on-error: true

      - name: Upload HTMLHint report
        uses: actions/upload-artifact@v3
        with:
          name: htmlhint-report
          path: lint-report.json

  report-to-moodle:
    needs: run-lint
    if: ${{ always() && !contains(github.actor, 'classroom') }}
    name: Report Lint Result to Moodle
    runs-on: ubuntu-latest
    steps:
      - name: Download HTMLHint report
        uses: actions/download-artifact@v3
        with:
          name: htmlhint-report

      - name: Build Markdown table of errors
        id: build-table
        run: |
          # Prepare header
          echo "|Line|Rule|Message|" > feedback.md
          echo "|---|---|---|" >> feedback.md
          # Parse JSON to table rows
          jq -r '.[] | .messages[]? | "|\(.line)|\(.rule)|\(.message)|"' lint-report.json >> feedback.md
          # Read into variable
          table=$(sed ':a;N;s/\n/%0A/g;ta' feedback.md)
          echo "table=$table" >> $GITHUB_OUTPUT

      - name: Update assignment in Moodle
        run: |
          user="user_name=${{ github.actor }}"
          repofull=${{ github.repository }}
          parts=(${repofull//\// })
          reponame=${parts[1]}
          template="${reponame/"-\${{ github.actor }}"/""}"
          assignment="assignment_name=$template"
          token=${{ secrets.MOODLE_TOKEN2 }}

          if [ "${{ needs.run-lint.outputs.result }}" == 'success' ]; then
            points=2
            feedback="Lint erfolgreich"
          else
            points=1
            # Use the markdown table for feedback
            feedback="Lint meldet Fehler; siehe Tabelle:%0A${{ needs.run-lint.outputs.table }}"
          fi
          echo "$feedback"

          curl -k -X POST "${{ vars.MOODLE_URL }}/webservice/rest/server.php?wstoken=$token&wsfunction=mod_externalassignment_update_grade" \
            -H "Content-Type: application/x-www-form-urlencoded" \
            --data "$assignment" \
            --data "$user" \
            --data "points=$points" \
            --data "feedback=$feedback" \
            --data "max=2" \
            --data "externallink=${{ github.repository }}"